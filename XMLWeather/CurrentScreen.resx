<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qzARUo//2Q==
</value>
  </data>
</root>